{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _fuse = _interopRequireDefault(require(\"fuse.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // Variables to Come as parameters\n\n\nvar RETURNED_RESULTS = 5; // Simulates Jquery .empty() behavior but a little bit more Vanilla\n\nfunction emptyChildNodes(node) {\n  while (node.firstChild) {\n    node.removeChild(node.firstChild);\n  }\n} // Check if arrays are equal ( Guess in the future Underscore will\n// be an import to free me from Vanilla JSing)\n\n\nfunction arraysEqual(a, b) {\n  /*\n        Array-aware equality checker:\n        Returns whether arguments a and b are == to each other;\n        however if they are equal-lengthed arrays, returns whether their \n        elements are pairwise == to each other recursively under this\n        definition.\n    */\n  if (a instanceof Array && b instanceof Array) {\n    if (a.length != b.length) // assert same length\n      return false;\n\n    for (var i = 0; i < a.length; i++ // assert each element equal\n    ) {\n      if (!arraysEqual(a[i], b[i])) return false;\n    }\n\n    return true;\n  } else {\n    return a == b; // if not both arrays, should be the same\n  }\n}\n\nvar airport_input = function airport_input(id, data, options) {\n  var listOfResults = [];\n  var fuse = new _fuse.default(data, options);\n  var ac = document.getElementById(id);\n  ac.addEventListener('click', function (e) {\n    e.stopPropagation();\n  });\n  ac.addEventListener('keyup', search);\n  ac.addEventListener('focus', search);\n  ac.addEventListener('keydown', onKeyDown);\n  var autocomplete_wrapper = ['autocomplete-wrapper', id].join(' ');\n  var autocomplete_results = ['autocomplete-results', id].join(' ');\n  var autocomplete_result = ['autocomplete-result', id].join(' ');\n  var wrap = document.createElement('div');\n  wrap.className = autocomplete_wrapper;\n  ac.parentNode.insertBefore(wrap, ac);\n  wrap.appendChild(ac);\n  var list = document.createElement('div');\n  list.className = autocomplete_results;\n  wrap.appendChild(list);\n  var list = document.getElementsByClassName(autocomplete_results)[0];\n  list.addEventListener('click', function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    selectIndexFunc(this.getAttribute('data-highlight'));\n  });\n  list.addEventListener('mouseover', function (event) {\n    var index = event.target.getAttribute('data-index');\n    list.setAttribute('data-highlight', index);\n  });\n\n  function clearResults() {\n    results = [];\n    numResults = 0;\n    emptyChildNodes(list);\n  }\n\n  function selectIndexFunc(index) {\n    if (results.length >= parseInt(index) + 1) {\n      ac.value = results[index].IATA + '  ' + results[index].name;\n      ac.setAttribute('data-lon', results[index].lon);\n      ac.setAttribute('data-lat', results[index].lat);\n      ac.setAttribute('data-iata', results[index].IATA);\n      clearResults();\n    }\n  }\n\n  var results = [];\n  var numResults = 0;\n  var selectedIndex = -1;\n\n  function search(e) {\n    // 38 code = up Arrow\n    // 13 code = enter\n    // 40 code = down arrow\n    if (e.which === 38 || e.which === 13 || e.which === 40) {\n      return;\n    } // Check if user have written anything\n\n\n    if (ac.value.length > 0) {\n      // Splice the results and\n      results = fuse.search(ac.value).slice(0, RETURNED_RESULTS);\n      if (arraysEqual(results, listOfResults)) return;\n      numResults = results.length;\n      var divs = results.map(function (r, i) {\n        return \"<div class=\\\" \".concat(autocomplete_result, \" \\n                     single-result\\\" \\n                     data-index=\\\"\").concat(i, \"\\\"> \\n                     \").concat(r.name, \" (\").concat(r.IATA, \") \\n                    </br>\\n                    \").concat(r.city, \" ,\").concat(r.country, \"\\n                    </div> \");\n      });\n      selectedIndex = -1; // Jquery - Inserts HTML code to the div of the list\n      // list.html(divs.join(\"\")).attr(\"data-highlight\", selectedIndex);\n      // Mine VanillaJS implementation of this\n\n      document.getElementsByClassName(autocomplete_results)[0].innerHTML = divs.join('');\n    } else {\n      numResults = 0; // Jquery - Removes all child nodes of\n      // the set of matched elements from the DOM.\n      // list.empty();\n      // Vanilla JS replacement by Konsalex (Xamos)\n\n      emptyChildNodes(list);\n    }\n  }\n\n  function onKeyDown(e) {\n    switch (e.which) {\n      case 38:\n        // up\n        selectedIndex--;\n\n        if (selectedIndex <= -1) {\n          selectedIndex = -1;\n        }\n\n        list.setAttribute('data-highlight', selectedIndex);\n        break;\n\n      case 13:\n        // enter\n        selectIndex(selectedIndex);\n        break;\n\n      case 9:\n        // enter\n        selectIndex(selectedIndex);\n        e.stopPropagation();\n        return;\n\n      case 40:\n        // down\n        selectedIndex++;\n\n        if (selectedIndex >= numResults) {\n          selectedIndex = numResults - 1;\n        }\n\n        list.setAttribute('data-highlight', selectedIndex);\n        break;\n\n      default:\n        return;\n      // exit this handler for other keys\n    }\n\n    e.stopPropagation();\n    e.preventDefault(); // prevent the default action (scroll / move caret)\n  }\n};\n\nvar _default = airport_input;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}